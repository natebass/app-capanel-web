/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ResetPasswordRouteImport } from './routes/reset-password'
import { Route as RecoverPasswordRouteImport } from './routes/recover-password'
import { Route as LoginRouteImport } from './routes/login'
import { Route as HomeRouteImport } from './routes/_home'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as HomeIndexRouteImport } from './routes/_home/index'
import { Route as HomeDocsRouteImport } from './routes/_home/docs'
import { Route as HomeApiSyncRouteImport } from './routes/_home/api-sync'
import { Route as HomeDemoRouteImport } from './routes/_home/_demo'
import { Route as AuthSettingsRouteImport } from './routes/_auth/settings'
import { Route as AuthItemsRouteImport } from './routes/_auth/items'
import { Route as AuthDashboardRouteImport } from './routes/_auth/dashboard'
import { Route as AuthAdminRouteImport } from './routes/_auth/admin'
import { Route as HomeDemoDemoTanstackQueryRouteImport } from './routes/_home/_demo/demo.tanstack-query'
import { Route as HomeDemoDemoTableRouteImport } from './routes/_home/_demo/demo.table'
import { Route as HomeDemoDemoFormSimpleRouteImport } from './routes/_home/_demo/demo.form.simple'
import { Route as HomeDemoDemoFormAddressRouteImport } from './routes/_home/_demo/demo.form.address'

const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ResetPasswordRoute = ResetPasswordRouteImport.update({
  id: '/reset-password',
  path: '/reset-password',
  getParentRoute: () => rootRouteImport,
} as any)
const RecoverPasswordRoute = RecoverPasswordRouteImport.update({
  id: '/recover-password',
  path: '/recover-password',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeDocsRoute = HomeDocsRouteImport.update({
  id: '/docs',
  path: '/docs',
  getParentRoute: () => HomeRoute,
} as any)
const HomeApiSyncRoute = HomeApiSyncRouteImport.update({
  id: '/api-sync',
  path: '/api-sync',
  getParentRoute: () => HomeRoute,
} as any)
const HomeDemoRoute = HomeDemoRouteImport.update({
  id: '/_demo',
  getParentRoute: () => HomeRoute,
} as any)
const AuthSettingsRoute = AuthSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)
const AuthItemsRoute = AuthItemsRouteImport.update({
  id: '/items',
  path: '/items',
  getParentRoute: () => AuthRoute,
} as any)
const AuthDashboardRoute = AuthDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AuthRoute,
} as any)
const AuthAdminRoute = AuthAdminRouteImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => AuthRoute,
} as any)
const HomeDemoDemoTanstackQueryRoute =
  HomeDemoDemoTanstackQueryRouteImport.update({
    id: '/demo/tanstack-query',
    path: '/demo/tanstack-query',
    getParentRoute: () => HomeDemoRoute,
  } as any)
const HomeDemoDemoTableRoute = HomeDemoDemoTableRouteImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => HomeDemoRoute,
} as any)
const HomeDemoDemoFormSimpleRoute = HomeDemoDemoFormSimpleRouteImport.update({
  id: '/demo/form/simple',
  path: '/demo/form/simple',
  getParentRoute: () => HomeDemoRoute,
} as any)
const HomeDemoDemoFormAddressRoute = HomeDemoDemoFormAddressRouteImport.update({
  id: '/demo/form/address',
  path: '/demo/form/address',
  getParentRoute: () => HomeDemoRoute,
} as any)

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/admin': typeof AuthAdminRoute
  '/dashboard': typeof AuthDashboardRoute
  '/items': typeof AuthItemsRoute
  '/settings': typeof AuthSettingsRoute
  '/api-sync': typeof HomeApiSyncRoute
  '/docs': typeof HomeDocsRoute
  '/': typeof HomeIndexRoute
  '/demo/table': typeof HomeDemoDemoTableRoute
  '/demo/tanstack-query': typeof HomeDemoDemoTanstackQueryRoute
  '/demo/form/address': typeof HomeDemoDemoFormAddressRoute
  '/demo/form/simple': typeof HomeDemoDemoFormSimpleRoute
}
export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/admin': typeof AuthAdminRoute
  '/dashboard': typeof AuthDashboardRoute
  '/items': typeof AuthItemsRoute
  '/settings': typeof AuthSettingsRoute
  '/api-sync': typeof HomeApiSyncRoute
  '/docs': typeof HomeDocsRoute
  '/': typeof HomeIndexRoute
  '/demo/table': typeof HomeDemoDemoTableRoute
  '/demo/tanstack-query': typeof HomeDemoDemoTanstackQueryRoute
  '/demo/form/address': typeof HomeDemoDemoFormAddressRoute
  '/demo/form/simple': typeof HomeDemoDemoFormSimpleRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_auth': typeof AuthRouteWithChildren
  '/_home': typeof HomeRouteWithChildren
  '/login': typeof LoginRoute
  '/recover-password': typeof RecoverPasswordRoute
  '/reset-password': typeof ResetPasswordRoute
  '/signup': typeof SignupRoute
  '/_auth/admin': typeof AuthAdminRoute
  '/_auth/dashboard': typeof AuthDashboardRoute
  '/_auth/items': typeof AuthItemsRoute
  '/_auth/settings': typeof AuthSettingsRoute
  '/_home/_demo': typeof HomeDemoRouteWithChildren
  '/_home/api-sync': typeof HomeApiSyncRoute
  '/_home/docs': typeof HomeDocsRoute
  '/_home/': typeof HomeIndexRoute
  '/_home/_demo/demo/table': typeof HomeDemoDemoTableRoute
  '/_home/_demo/demo/tanstack-query': typeof HomeDemoDemoTanstackQueryRoute
  '/_home/_demo/demo/form/address': typeof HomeDemoDemoFormAddressRoute
  '/_home/_demo/demo/form/simple': typeof HomeDemoDemoFormSimpleRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/admin'
    | '/dashboard'
    | '/items'
    | '/settings'
    | '/api-sync'
    | '/docs'
    | '/'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/demo/form/address'
    | '/demo/form/simple'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/admin'
    | '/dashboard'
    | '/items'
    | '/settings'
    | '/api-sync'
    | '/docs'
    | '/'
    | '/demo/table'
    | '/demo/tanstack-query'
    | '/demo/form/address'
    | '/demo/form/simple'
  id:
    | '__root__'
    | '/_auth'
    | '/_home'
    | '/login'
    | '/recover-password'
    | '/reset-password'
    | '/signup'
    | '/_auth/admin'
    | '/_auth/dashboard'
    | '/_auth/items'
    | '/_auth/settings'
    | '/_home/_demo'
    | '/_home/api-sync'
    | '/_home/docs'
    | '/_home/'
    | '/_home/_demo/demo/table'
    | '/_home/_demo/demo/tanstack-query'
    | '/_home/_demo/demo/form/address'
    | '/_home/_demo/demo/form/simple'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  HomeRoute: typeof HomeRouteWithChildren
  LoginRoute: typeof LoginRoute
  RecoverPasswordRoute: typeof RecoverPasswordRoute
  ResetPasswordRoute: typeof ResetPasswordRoute
  SignupRoute: typeof SignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reset-password': {
      id: '/reset-password'
      path: '/reset-password'
      fullPath: '/reset-password'
      preLoaderRoute: typeof ResetPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/recover-password': {
      id: '/recover-password'
      path: '/recover-password'
      fullPath: '/recover-password'
      preLoaderRoute: typeof RecoverPasswordRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/': {
      id: '/_home/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/docs': {
      id: '/_home/docs'
      path: '/docs'
      fullPath: '/docs'
      preLoaderRoute: typeof HomeDocsRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/api-sync': {
      id: '/_home/api-sync'
      path: '/api-sync'
      fullPath: '/api-sync'
      preLoaderRoute: typeof HomeApiSyncRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/_demo': {
      id: '/_home/_demo'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeDemoRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/items': {
      id: '/_auth/items'
      path: '/items'
      fullPath: '/items'
      preLoaderRoute: typeof AuthItemsRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/dashboard': {
      id: '/_auth/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/admin': {
      id: '/_auth/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AuthAdminRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_home/_demo/demo/tanstack-query': {
      id: '/_home/_demo/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof HomeDemoDemoTanstackQueryRouteImport
      parentRoute: typeof HomeDemoRoute
    }
    '/_home/_demo/demo/table': {
      id: '/_home/_demo/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof HomeDemoDemoTableRouteImport
      parentRoute: typeof HomeDemoRoute
    }
    '/_home/_demo/demo/form/simple': {
      id: '/_home/_demo/demo/form/simple'
      path: '/demo/form/simple'
      fullPath: '/demo/form/simple'
      preLoaderRoute: typeof HomeDemoDemoFormSimpleRouteImport
      parentRoute: typeof HomeDemoRoute
    }
    '/_home/_demo/demo/form/address': {
      id: '/_home/_demo/demo/form/address'
      path: '/demo/form/address'
      fullPath: '/demo/form/address'
      preLoaderRoute: typeof HomeDemoDemoFormAddressRouteImport
      parentRoute: typeof HomeDemoRoute
    }
  }
}

interface AuthRouteChildren {
  AuthAdminRoute: typeof AuthAdminRoute
  AuthDashboardRoute: typeof AuthDashboardRoute
  AuthItemsRoute: typeof AuthItemsRoute
  AuthSettingsRoute: typeof AuthSettingsRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthAdminRoute: AuthAdminRoute,
  AuthDashboardRoute: AuthDashboardRoute,
  AuthItemsRoute: AuthItemsRoute,
  AuthSettingsRoute: AuthSettingsRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface HomeDemoRouteChildren {
  HomeDemoDemoTableRoute: typeof HomeDemoDemoTableRoute
  HomeDemoDemoTanstackQueryRoute: typeof HomeDemoDemoTanstackQueryRoute
  HomeDemoDemoFormAddressRoute: typeof HomeDemoDemoFormAddressRoute
  HomeDemoDemoFormSimpleRoute: typeof HomeDemoDemoFormSimpleRoute
}

const HomeDemoRouteChildren: HomeDemoRouteChildren = {
  HomeDemoDemoTableRoute: HomeDemoDemoTableRoute,
  HomeDemoDemoTanstackQueryRoute: HomeDemoDemoTanstackQueryRoute,
  HomeDemoDemoFormAddressRoute: HomeDemoDemoFormAddressRoute,
  HomeDemoDemoFormSimpleRoute: HomeDemoDemoFormSimpleRoute,
}

const HomeDemoRouteWithChildren = HomeDemoRoute._addFileChildren(
  HomeDemoRouteChildren,
)

interface HomeRouteChildren {
  HomeDemoRoute: typeof HomeDemoRouteWithChildren
  HomeApiSyncRoute: typeof HomeApiSyncRoute
  HomeDocsRoute: typeof HomeDocsRoute
  HomeIndexRoute: typeof HomeIndexRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeDemoRoute: HomeDemoRouteWithChildren,
  HomeApiSyncRoute: HomeApiSyncRoute,
  HomeDocsRoute: HomeDocsRoute,
  HomeIndexRoute: HomeIndexRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  HomeRoute: HomeRouteWithChildren,
  LoginRoute: LoginRoute,
  RecoverPasswordRoute: RecoverPasswordRoute,
  ResetPasswordRoute: ResetPasswordRoute,
  SignupRoute: SignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
